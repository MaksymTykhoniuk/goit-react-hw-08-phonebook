{"version":3,"file":"static/js/272.9f9a1fb3.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/PhonebookComponents/PhonebookForm/PhonebookForm.styled.jsx","components/PhonebookComponents/PhonebookForm/PhonebookForm.jsx","components/PhonebookComponents/ContactItem/ContactItem.styled.jsx","components/PhonebookComponents/ContactItem/ContactItem.jsx","components/PhonebookComponents/ContactsList/ContactsList.styled.jsx","components/PhonebookComponents/ContactsList/ContactsList.jsx","components/PhonebookComponents/Filter/Filter.styled.jsx","components/PhonebookComponents/Filter/Filter.jsx","components/PhonebookComponents/Notification/Notification.styled.jsx","components/PhonebookComponents/Notification/Notification.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  font-size: 32px;\n  text-align: center;\n  color: #e0a96d;\n`;\nexport const Wrapper = styled.section`\n  width: 480px;\n  margin: auto;\n  padding: 30px;\n  background-color: #1e2528;\n  box-shadow: 0px 4px 5px 1px rgba(0, 0, 0, 0.75);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, Wrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n`;\n\nexport const Btn = styled.button`\n  height: 34px;\n  cursor: pointer;\n  border-radius: 10px;\n  border: 1px solid #e0a96d;\n  color: #e0a96d;\n  background-color: transparent;\n  transition: scale 250ms linear;\n\n  :hover,\n  :focus {\n    scale: 1.1;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 10px;\n  padding-left: 10px;\n  border: 1px solid #f6ead4;\n  outline: none;\n  font-weight: bold;\n  background-color: transparent;\n  color: #e0a96d;\n\n  ::placeholder {\n    color: #f6ead4;\n  }\n`;\n","import { RiUserAddFill } from 'react-icons/ri';\nimport { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { Form, Btn, Input } from './PhonebookForm.styled';\nimport { TailSpin } from 'react-loader-spinner';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contactsSlice';\n\n// ----- createAsyncThunk v.\n// import { useDispatch, useSelector } from 'react-redux';\n// import { addContact } from 'redux/operations';\n\nexport const PhonebookForm = () => {\n  const { data } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  // ----- createAsyncThunk v.\n  // const dispatch = useDispatch();\n  // const contacts = useSelector(state => state.contacts.items);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = evt => {\n    const { name, value } = evt.currentTarget;\n\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleFormSubmit = async evt => {\n    evt.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    const alreadyExists = data.findIndex(item => {\n      const prevItem = item.name.toLowerCase();\n      const newItem = contact.name.toLowerCase();\n      return prevItem === newItem;\n    });\n\n    if (alreadyExists >= 0) {\n      Notify.failure(`${contact.name} is already in contacts`);\n      return;\n    } else {\n      await addContact(contact);\n      // dispatch(addContact(contact))\n    }\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleInputChange}\n        required\n      />\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        placeholder=\"Enter phone number\"\n        pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n        title=\"Phone exemple 123-123-1234\"\n        onChange={handleInputChange}\n        required\n      />\n      <Btn type=\"submit\" aria-label=\"Add contact\">\n        {isLoading ? (\n          <TailSpin\n            height=\"23\"\n            width=\"23\"\n            color=\"#e0a96d\"\n            ariaLabel=\"tail-spin-loading\"\n            radius=\"1.1\"\n            visible={true}\n          />\n        ) : (\n          <RiUserAddFill style={{ marginTop: 2.5 }} size=\"1.8em\" />\n        )}\n      </Btn>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Name = styled.p`\n  width: 150px;\n  color: #f6ead4;\n`;\n\nexport const PhoneNumber = styled.span`\n  color: #f6ead4;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid black;\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n  color: #e0a96d;\n  background-color: transparent;\n  border: none;\n  transition: scale 250ms linear;\n\n  :hover,\n  :focus {\n    scale: 1.1;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { RxCrossCircled } from 'react-icons/rx';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\nimport { Name, PhoneNumber, Item, Btn } from './ContactItem.styled';\n\n// crateAsyncThunk v.\n// import { useDispatch } from 'react-redux';\n// import { deleteContact } from 'redux/operations';\n\nexport const ContactItem = ({ contact }) => {\n  const { id, name, number } = contact;\n  const [deleteContact, result] = useDeleteContactMutation();\n\n  // --------- crateAsyncThunk v.\n  // const dispatch = useDispatch();\n  // const handleDeleteContact = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      <Item>\n        {!result.isLoading ? (\n          <>\n            <Name>{name}</Name>\n            <PhoneNumber>{number}</PhoneNumber>\n          </>\n        ) : (\n          <p style={{ color: 'grey' }}>Deleting contact...</p>\n        )}\n\n        <Btn\n          type=\"button\"\n          aria-label=\"Delete contact\"\n          disabled={result.isLoading}\n          onClick={() => deleteContact(id)}\n        >\n          <RxCrossCircled size=\"2em\" />\n        </Btn>\n      </Item>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 20px;\n  padding: 0;\n`;\n","import { ContactItem } from 'components/PhonebookComponents/ContactItem/ContactItem';\nimport { List } from './ContactsList.styled';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\n\nexport const ContactsList = () => {\n  const { data } = useGetContactsQuery();\n  const filter = useSelector(state => state.filter);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  // -------createAsyncThunk() v.\n\n  // const contacts = useSelector(state => state.contacts.items)\n\n  //   const getFilteredContacts = () => {\n  //     const normalizedFilter = filter.toLowerCase().trim();\n  //     return contacts.filter(contact =>\n  //       contact.name.toLowerCase().includes(normalizedFilter)\n  //     );\n  //   };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <List>\n      {filteredContacts.map(contact => {\n        return <ContactItem key={contact.id} contact={contact}></ContactItem>;\n      })}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterInput = styled.input`\n  height: 36px;\n  border-radius: 10px;\n  padding-left: 10px;\n  border: 1px solid #f6ead4;\n  outline: none;\n  font-weight: bold;\n  background-color: transparent;\n  color: #e0a96d;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Btn = styled.button`\n  padding-top: 5px;\n  padding-bottom: 5px;\n  cursor: pointer;\n  margin-left: 20px;\n  border-radius: 10px;\n  border: 1px solid #e0a96d;\n  color: #e0a96d;\n  background-color: transparent;\n  transition: scale 250ms linear;\n\n  :hover,\n  :focus {\n    scale: 1.1;\n  }\n`;\n","import { AiFillDelete } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../../redux/filterSlice';\nimport { FilterInput, FilterWrapper, Btn } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const { value } = event.currentTarget;\n    dispatch(setFilter(value));\n  };\n\n  const clearFilterField = () => {\n    dispatch(setFilter(''));\n  };\n\n  return (\n    <>\n      <FilterWrapper>\n        <label htmlFor=\"filter\">\n          <FilterInput\n            type=\"text\"\n            id=\"filter\"\n            name=\"filter\"\n            value={filter}\n            onChange={handleFilterChange}\n          />\n        </label>\n        <Btn type=\"button\" aria-label=\"Clear filter\" onClick={clearFilterField}>\n          <AiFillDelete size=\"1.8em\" />\n        </Btn>\n      </FilterWrapper>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const NotificationMesssage = styled.p`\n  color: #e86b6b;\n  padding: 20px;\n  text-align: center;\n  font-size: 24px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationMesssage } from './Notification.styled';\n\nexport const Notification = ({ message }) => {\n  return <NotificationMesssage>{message}</NotificationMesssage>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import { PhonebookForm } from '../components/PhonebookComponents/PhonebookForm/PhonebookForm';\nimport { ContactsList } from '../components/PhonebookComponents/ContactsList/ContactsList';\nimport { Filter } from '../components/PhonebookComponents/Filter/Filter';\nimport { Section } from '../components/Section/Section';\nimport { Notification } from '../components/PhonebookComponents/Notification/Notification';\nimport { useGetContactsQuery } from '../redux/contactsSlice';\nimport { TailSpin } from 'react-loader-spinner';\nimport { Helmet } from 'react-helmet';\n\nexport default function Contacts() {\n  const { data, error, isLoading } = useGetContactsQuery();\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Section title=\"Add new contact\">\n        <PhonebookForm />\n      </Section>\n\n      {isLoading && (\n        <Section>\n          <TailSpin\n            height=\"280\"\n            width=\"280\"\n            color=\"#e0a96d\"\n            ariaLabel=\"tail-spin-loading\"\n            radius=\"1\"\n            wrapperStyle={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        </Section>\n      )}\n\n      {error && (\n        <Section>\n          <Notification message=\"Oops, soomething went wrong\"></Notification>\n        </Section>\n      )}\n\n      {!isLoading && !error && data.length > 0 && (\n        <>\n          <Section title=\"Filter contacts\">\n            <Filter />\n          </Section>\n\n          <Section title=\"Saved contacts\">\n            <ContactsList />\n          </Section>\n        </>\n      )}\n\n      {!isLoading && !error && data.length === 0 && (\n        <Section>\n          <Notification message=\"There is no contacts in your contact list\"></Notification>\n        </Section>\n      )}\n    </>\n  );\n}\n"],"names":["Title","styled","Wrapper","Section","title","children","Form","Btn","Input","PhonebookForm","data","useGetContactsQuery","useAddContactMutation","addContact","isLoading","useState","name","setName","number","setNumber","handleInputChange","evt","currentTarget","value","handleFormSubmit","preventDefault","contact","findIndex","item","toLowerCase","Notify","resetForm","onSubmit","type","placeholder","pattern","onChange","required","height","width","color","ariaLabel","radius","visible","style","marginTop","size","Name","PhoneNumber","Item","ContactItem","id","useDeleteContactMutation","deleteContact","result","disabled","onClick","List","ContactsList","filter","useSelector","state","filteredContacts","normalizedFilter","trim","includes","getFilteredContacts","map","FilterInput","FilterWrapper","Filter","dispatch","useDispatch","htmlFor","event","setFilter","NotificationMesssage","Notification","message","Contacts","error","Helmet","wrapperStyle","display","alignItems","justifyContent","wrapperClass","length"],"sourceRoot":""}